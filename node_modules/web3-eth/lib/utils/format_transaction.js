"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatTransaction = void 0;
const web3_utils_1 = require("web3-utils");
const web3_validator_1 = require("web3-validator");
const web3_errors_1 = require("web3-errors");
const schemas_1 = require("../schemas");
function formatTransaction(transaction, returnFormat = web3_utils_1.DEFAULT_RETURN_FORMAT) {
    var _a;
    let formattedTransaction = (0, web3_utils_1.mergeDeep)({}, transaction);
    if (!(0, web3_validator_1.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {
        formattedTransaction.common = Object.assign({}, transaction.common);
        if (!(0, web3_validator_1.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain))
            formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);
    }
    formattedTransaction = (0, web3_utils_1.format)(schemas_1.transactionSchema, formattedTransaction, returnFormat);
    if (!(0, web3_validator_1.isNullish)(formattedTransaction.data) && !(0, web3_validator_1.isNullish)(formattedTransaction.input))
        throw new web3_errors_1.TransactionDataAndInputError({
            data: (0, web3_utils_1.bytesToBuffer)(formattedTransaction.data).toString('hex'),
            input: (0, web3_utils_1.bytesToBuffer)(formattedTransaction.input).toString('hex'),
        });
    else if (!(0, web3_validator_1.isNullish)(formattedTransaction.input)) {
        formattedTransaction.data = formattedTransaction.input;
        delete formattedTransaction.input;
    }
    return formattedTransaction;
}
exports.formatTransaction = formatTransaction;
//# sourceMappingURL=format_transaction.js.map