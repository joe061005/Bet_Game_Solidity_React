"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectRawTransactionType = exports.detectTransactionType = exports.defaultTransactionTypeParser = void 0;
const web3_utils_1 = require("web3-utils");
const web3_validator_1 = require("web3-validator");
const defaultTransactionTypeParser = transaction => {
    var _a, _b;
    const tx = transaction;
    if (!(0, web3_validator_1.isNullish)(tx.type))
        return (0, web3_utils_1.format)({ eth: 'uint' }, tx.type, web3_utils_1.ETH_DATA_FORMAT);
    if (!(0, web3_validator_1.isNullish)(tx.maxFeePerGas) ||
        !(0, web3_validator_1.isNullish)(tx.maxPriorityFeePerGas) ||
        tx.hardfork === 'london' ||
        ((_a = tx.common) === null || _a === void 0 ? void 0 : _a.hardfork) === 'london')
        return '0x2';
    if (!(0, web3_validator_1.isNullish)(tx.accessList) || tx.hardfork === 'berlin' || ((_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork) === 'berlin')
        return '0x1';
    return undefined;
};
exports.defaultTransactionTypeParser = defaultTransactionTypeParser;
const detectTransactionType = (transaction, web3Context) => {
    var _a;
    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : exports.defaultTransactionTypeParser)(transaction);
};
exports.detectTransactionType = detectTransactionType;
const detectRawTransactionType = (transaction) => transaction[0] > 0x7f ? '0x0' : (0, web3_utils_1.toHex)(transaction[0]);
exports.detectRawTransactionType = detectRawTransactionType;
//# sourceMappingURL=detect_transaction_type.js.map