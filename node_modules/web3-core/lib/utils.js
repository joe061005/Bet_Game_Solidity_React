"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSupportSubscriptions = exports.isSupportedProvider = exports.isLegacySendAsyncProvider = exports.isLegacySendProvider = exports.isEIP1193Provider = exports.isLegacyRequestProvider = exports.isWeb3Provider = void 0;
const web3_types_1 = require("web3-types");
const isWeb3Provider = (provider) => web3_types_1.Web3BaseProvider.isWeb3Provider(provider);
exports.isWeb3Provider = isWeb3Provider;
const isLegacyRequestProvider = (provider) => typeof provider !== 'string' &&
    'request' in provider &&
    provider.request.constructor.name === 'Function';
exports.isLegacyRequestProvider = isLegacyRequestProvider;
const isEIP1193Provider = (provider) => typeof provider !== 'string' &&
    'request' in provider &&
    provider.request.constructor.name === 'AsyncFunction';
exports.isEIP1193Provider = isEIP1193Provider;
const isLegacySendProvider = (provider) => typeof provider !== 'string' && 'send' in provider;
exports.isLegacySendProvider = isLegacySendProvider;
const isLegacySendAsyncProvider = (provider) => typeof provider !== 'string' && 'sendAsync' in provider;
exports.isLegacySendAsyncProvider = isLegacySendAsyncProvider;
const isSupportedProvider = (provider) => web3_types_1.Web3BaseProvider.isWeb3Provider(provider) ||
    (0, exports.isLegacyRequestProvider)(provider) ||
    (0, exports.isLegacySendAsyncProvider)(provider) ||
    (0, exports.isLegacySendProvider)(provider);
exports.isSupportedProvider = isSupportedProvider;
const isSupportSubscriptions = (provider) => {
    if ((0, exports.isWeb3Provider)(provider)) {
        return provider.supportsSubscriptions();
    }
    if (typeof provider !== 'string' && 'on' in provider) {
        return true;
    }
    return false;
};
exports.isSupportSubscriptions = isSupportSubscriptions;
//# sourceMappingURL=utils.js.map