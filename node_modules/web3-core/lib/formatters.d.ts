import { Filter, Numbers, Topic, BlockInput, BlockOutput, LogsInput, LogsOutput, Mutable, PostInput, PostOutput, Proof, ReceiptInput, ReceiptOutput, SyncInput, SyncOutput, TransactionInput, TransactionOutput } from 'web3-types';
export declare const inputStorageKeysFormatter: (keys: Array<string>) => string[];
export declare const outputProofFormatter: (proof: Proof) => Proof;
export declare const outputBigIntegerFormatter: (number: Numbers) => number | bigint;
export declare const inputBlockNumberFormatter: (blockNumber: Numbers | undefined) => string | undefined;
export declare const inputDefaultBlockNumberFormatter: (blockNumber: Numbers | undefined, defaultBlock: Numbers) => string | undefined;
export declare const inputAddressFormatter: (address: string) => string | never;
export declare const txInputOptionsFormatter: (options: TransactionInput) => Mutable<TransactionOutput>;
export declare const inputCallFormatter: (options: TransactionInput, defaultAccount?: string) => Mutable<TransactionOutput>;
export declare const inputTransactionFormatter: (options: TransactionInput, defaultAccount?: string) => Mutable<TransactionOutput>;
export declare const inputSignFormatter: (data: string) => string;
export declare const outputTransactionFormatter: (tx: TransactionInput) => TransactionOutput;
export declare const inputTopicFormatter: (topic: Topic) => Topic | null;
export declare const inputLogFormatter: (filter: Filter) => Filter;
export declare const outputLogFormatter: (log: Partial<LogsInput>) => LogsOutput;
export declare const outputTransactionReceiptFormatter: (receipt: ReceiptInput) => ReceiptOutput;
export declare const outputBlockFormatter: (block: BlockInput) => BlockOutput;
export declare const inputPostFormatter: (post: PostOutput) => PostInput;
export declare const outputPostFormatter: (post: PostInput) => PostOutput;
export declare const outputSyncingFormatter: (result: SyncInput) => SyncOutput;
//# sourceMappingURL=formatters.d.ts.map