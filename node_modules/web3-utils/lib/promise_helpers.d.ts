/// <reference types="node" />
export declare function isPromise(object: unknown): boolean;
export declare type AsyncFunction<T, K = unknown> = (...args: K[]) => Promise<T>;
export declare function waitWithTimeout<T>(awaitable: Promise<T> | AsyncFunction<T>, timeout: number, error: Error): Promise<T>;
export declare function waitWithTimeout<T>(awaitable: Promise<T> | AsyncFunction<T>, timeout: number): Promise<T | undefined>;
export declare function pollTillDefined<T>(func: AsyncFunction<T>, interval: number): Promise<Exclude<T, undefined>>;
export declare function rejectIfTimeout(timeout: number, error: Error): [NodeJS.Timer, Promise<never>];
export declare function rejectIfConditionAtInterval<T>(cond: AsyncFunction<T | undefined>, interval: number): [NodeJS.Timer, Promise<never>];
//# sourceMappingURL=promise_helpers.d.ts.map