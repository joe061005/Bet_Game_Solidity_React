import { Numbers, TypedObject, TypedObjectAbbreviated, Bytes, Sha3Input } from 'web3-types';
export declare const sha3: (data: Bytes) => string | undefined;
export declare const sha3Raw: (data: Bytes) => string;
export declare const keccak256Wrapper: (data: Bytes | Numbers | string | ReadonlyArray<number>) => string;
export { keccak256Wrapper as keccak256 };
export declare const processSolidityEncodePackedArgs: (arg: Sha3Input) => string;
export declare const encodePacked: (...values: Sha3Input[]) => string;
export declare const soliditySha3: (...values: Sha3Input[]) => string | undefined;
export declare const soliditySha3Raw: (...values: TypedObject[] | TypedObjectAbbreviated[]) => string;
export declare const getStorageSlotNumForLongString: (mainSlotNumber: number | string) => string | undefined;
//# sourceMappingURL=hash.d.ts.map