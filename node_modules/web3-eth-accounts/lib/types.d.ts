import { FeeMarketEIP1559TxData, AccessListEIP2930TxData, TxData } from '@ethereumjs/tx';
import { Web3BaseWalletAccount, HexString } from 'web3-types';
export declare type SignatureObject = {
    messageHash: string;
    r: string;
    s: string;
    v: string;
};
export declare type SignTransactionResult = SignatureObject & {
    rawTransaction: string;
    transactionHash: string;
};
export declare type SignTransactionFunction = (transaction: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | Record<string, unknown>) => SignTransactionResult;
export declare type SignResult = SignatureObject & {
    message?: string;
    signature: string;
};
export declare type SignFunction = (data: string, privateKey: string) => SignResult;
export interface Web3Account extends Web3BaseWalletAccount {
    address: HexString;
    privateKey: HexString;
}
export interface WebStorage {
    readonly length: number;
    clear(): void;
    getItem(key: string): string | null;
    key(index: number): string | null;
    removeItem(key: string): void;
    setItem(key: string, value: string): void;
    [name: string]: any;
}
//# sourceMappingURL=types.d.ts.map