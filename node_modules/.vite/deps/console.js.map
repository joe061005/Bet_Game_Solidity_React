{
  "version": 3,
  "sources": ["../../console-browserify/index.js"],
  "sourcesContent": ["/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,QAAI,OAAO;AACX,QAAI,SAAS;AACb,aAAS,MAAM;AAAE,cAAO,oBAAI,KAAK,GAAE,QAAQ;AAAA,IAAE;AAE7C,QAAI,QAAQ,MAAM,UAAU;AAC5B,QAAI;AACJ,QAAI,QAAQ,CAAC;AAEb,QAAI,OAAO,YAAW,eAAe,QAAO,SAAS;AACjD,gBAAU,QAAO;AAAA,IACrB,WAAW,OAAO,WAAW,eAAe,OAAO,SAAS;AACxD,gBAAU,OAAO;AAAA,IACrB,OAAO;AACH,gBAAU,CAAC;AAAA,IACf;AAEA,QAAI,YAAY;AAAA,MACZ,CAAC,KAAK,KAAK;AAAA,MACX,CAAC,MAAM,MAAM;AAAA,MACb,CAAC,MAAM,MAAM;AAAA,MACb,CAAC,OAAO,OAAO;AAAA,MACf,CAAC,MAAM,MAAM;AAAA,MACb,CAAC,SAAS,SAAS;AAAA,MACnB,CAAC,OAAO,OAAO;AAAA,MACf,CAAC,KAAK,KAAK;AAAA,MACX,CAAC,eAAe,QAAQ;AAAA,IAC5B;AAEA,SAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACnC,cAAQ,UAAU,CAAC;AACnB,UAAI,MAAM,CAAC;AACX,aAAO,MAAM,CAAC;AAElB,UAAI,CAAC,QAAQ,IAAI,GAAG;AAChB,gBAAQ,IAAI,IAAI;AAAA,MACpB;AAAA,IACJ;AAPQ;AACA;AACA;AAHC;AAUT,WAAO,UAAU;AAEjB,aAAS,MAAM;AAAA,IAAC;AAEhB,aAAS,OAAO;AACZ,cAAQ,IAAI,MAAM,SAAS,SAAS;AAAA,IACxC;AAEA,aAAS,OAAO;AACZ,cAAQ,IAAI,MAAM,SAAS,SAAS;AAAA,IACxC;AAEA,aAAS,QAAQ;AACb,cAAQ,KAAK,MAAM,SAAS,SAAS;AAAA,IACzC;AAEA,aAAS,KAAK,OAAO;AACjB,YAAM,KAAK,IAAI,IAAI;AAAA,IACvB;AAEA,aAAS,QAAQ,OAAO;AACpB,UAAIA,QAAO,MAAM,KAAK;AACtB,UAAI,CAACA,OAAM;AACP,cAAM,IAAI,MAAM,oBAAoB,KAAK;AAAA,MAC7C;AAEA,aAAO,MAAM,KAAK;AAClB,UAAI,WAAW,IAAI,IAAIA;AACvB,cAAQ,IAAI,QAAQ,OAAO,WAAW,IAAI;AAAA,IAC9C;AAEA,aAAS,QAAQ;AACb,UAAI,MAAM,IAAI,MAAM;AACpB,UAAI,OAAO;AACX,UAAI,UAAU,KAAK,OAAO,MAAM,MAAM,SAAS;AAC/C,cAAQ,MAAM,IAAI,KAAK;AAAA,IAC3B;AAEA,aAAS,IAAI,QAAQ;AACjB,cAAQ,IAAI,KAAK,QAAQ,MAAM,IAAI,IAAI;AAAA,IAC3C;AAEA,aAAS,cAAc,YAAY;AAC/B,UAAI,CAAC,YAAY;AACb,YAAI,MAAM,MAAM,KAAK,WAAW,CAAC;AACjC,eAAO,GAAG,OAAO,KAAK,OAAO,MAAM,MAAM,GAAG,CAAC;AAAA,MACjD;AAAA,IACJ;AAAA;AAAA;",
  "names": ["time"]
}
